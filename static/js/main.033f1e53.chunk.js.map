{"version":3,"sources":["Component/ContactForm/ContactForm.styled.js","Component/ContactForm/ContactForm.jsx","Component/Filter/Filter.jsx","Component/ContactList/ContactList.styled.js","Component/ContactList/ContactList.jsx","Component/App/App.styled.js","Component/App/App.js","index.js"],"names":["Label","styled","label","Button","button","Input","input","ContactForm","propSubmit","useState","name","setName","number","setNumber","nameInputId","uuidv4","numberInputId","handleChange","event","currentTarget","value","onSubmit","preventDefault","htmlFor","placeholder","type","pattern","title","required","onChange","id","Filter","propeTypes","PropTypes","string","func","List","ul","ListItem","li","ContactList","contacts","onDelete","map","onClick","contact","array","Container","div","Title","h1","App","state","filter","formSubmitHandler","data","console","log","setState","addContact","changeFilter","getVisibleList","normalisedFilter","toLowerCase","includes","deleteContacts","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","this","prevProps","setItem","stringify","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.033f1e53.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  width: 100px;\n  height: 25px;\n  color: #7b3f3f;\n`;\nexport const Input = styled.input`\n  margin: 0;\n`;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Label, Button, Input } from './ContactForm.styled';\n\nexport default function ContactForm({ propSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    const resetForm =() => {\n      setName('');\n      setNumber('');\n    };\n\n    event.preventDefault();\n    propSubmit({ name, number })\n    resetForm();\n  }\n\n    \n\n    return (\n      <div>\n        <form onSubmit={handleSubmit}>\n          <Label htmlFor={nameInputId}>\n            Name\n            <Input\n              placeholder=\"name\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={name}\n              onChange={handleChange}\n              id={nameInputId}\n            />\n          </Label>\n          <Label htmlFor={numberInputId}>\n            Number\n            <Input\n              placeholder=\"number\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={number}\n              onChange={handleChange}\n              id={numberInputId}\n            />\n          </Label>\n          <Button type=\"submit\">Add contact</Button>\n        </form>\n      </div>\n    );\n  }\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\nexport default Filter;\n\nFilter.propeTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0 20px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 5px;\n  padding: 5px 10px;\n  color: #f71c0c;\n  border: 1px solid #723a3a;\n  border-radius: 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List, ListItem, Button } from './ContactList.styled';\n\nfunction ContactList({ contacts, onDelete }) {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          {name}: {number}\n          <Button onClick={() => onDelete(id)}>delete</Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\nexport default ContactList;\n\nContactList.propeTypes = {\n  contact: PropTypes.array,\n  onDelete: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 20px 20px;\n  width: 400px;\n\n  text-align: center;\n  justify-content: center;\n  border-radius: 10px;\n  border: 3px solid #ce6a6a;\n  background-color: #ec9f9f;\n`;\nexport const Title = styled.h1`\n  margin: 0 0 20px;\n`;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport { Container, Title } from './App.styled';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = data => {\n    console.log(data);\n  };\n\n  handleChange = event => {\n    const { filter, value } = event.currentTarget;\n\n    this.setState({\n      [filter]: value,\n    });\n  };\n\n  addContact = data => {\n    const contact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleList = () => {\n    const { filter, contacts } = this.state;\n    const normalisedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalisedFilter),\n    );\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <Container>\n        <Title>Phonebook</Title>\n        <ContactForm propSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <p>Find contacts by name</p>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.getVisibleList()}\n          onDelete={this.deleteContacts}\n        />\n      </Container>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Component/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}